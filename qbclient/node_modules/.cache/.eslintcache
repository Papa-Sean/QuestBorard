[{"/Users/seansugrue/QuestBorard/qbclient/src/index.js":"1","/Users/seansugrue/QuestBorard/qbclient/src/App.js":"2","/Users/seansugrue/QuestBorard/qbclient/src/reducers/index.js":"3","/Users/seansugrue/QuestBorard/qbclient/src/styles.js":"4","/Users/seansugrue/QuestBorard/qbclient/src/actions/posts.js":"5","/Users/seansugrue/QuestBorard/qbclient/src/components/Form/Form.js":"6","/Users/seansugrue/QuestBorard/qbclient/src/components/Posts/Posts.js":"7","/Users/seansugrue/QuestBorard/qbclient/src/reducers/posts.js":"8","/Users/seansugrue/QuestBorard/qbclient/src/components/Form/styles.js":"9","/Users/seansugrue/QuestBorard/qbclient/src/api/index.js":"10","/Users/seansugrue/QuestBorard/qbclient/src/constants/actionTypes.js":"11","/Users/seansugrue/QuestBorard/qbclient/src/components/Posts/styles.js":"12","/Users/seansugrue/QuestBorard/qbclient/src/components/Posts/Post/Post.js":"13","/Users/seansugrue/QuestBorard/qbclient/src/components/Posts/Post/styles.js":"14","/Users/seansugrue/QuestBorard/qbclient/src/ComponentsChat/Store.js":"15","/Users/seansugrue/QuestBorard/qbclient/src/ComponentsChat/Dashboard.js":"16","/Users/seansugrue/QuestBorard/qbclient/src/serviceWorker.js":"17"},{"size":549,"mtime":1614283994297,"results":"18","hashOfConfig":"19"},{"size":2059,"mtime":1614299622352,"results":"20","hashOfConfig":"19"},{"size":114,"mtime":1613834122392,"results":"21","hashOfConfig":"19"},{"size":395,"mtime":1613834122392,"results":"22","hashOfConfig":"19"},{"size":1238,"mtime":1613834122384,"results":"23","hashOfConfig":"19"},{"size":2614,"mtime":1613834122385,"results":"24","hashOfConfig":"19"},{"size":789,"mtime":1613834122386,"results":"25","hashOfConfig":"19"},{"size":535,"mtime":1613834122392,"results":"26","hashOfConfig":"19"},{"size":425,"mtime":1613834122385,"results":"27","hashOfConfig":"19"},{"size":428,"mtime":1614633597826,"results":"28","hashOfConfig":"19"},{"size":161,"mtime":1613834122387,"results":"29","hashOfConfig":"19"},{"size":266,"mtime":1613834122387,"results":"30","hashOfConfig":"19"},{"size":2235,"mtime":1613834122386,"results":"31","hashOfConfig":"19"},{"size":963,"mtime":1613834122386,"results":"32","hashOfConfig":"19"},{"size":1322,"mtime":1614127070915,"results":"33","hashOfConfig":"19"},{"size":5238,"mtime":1614449552981,"results":"34","hashOfConfig":"19"},{"size":5341,"mtime":1614273827415,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1sgzxro",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":5,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/seansugrue/QuestBorard/qbclient/src/index.js",[],["74","75"],"/Users/seansugrue/QuestBorard/qbclient/src/App.js",[],"/Users/seansugrue/QuestBorard/qbclient/src/reducers/index.js",[],"/Users/seansugrue/QuestBorard/qbclient/src/styles.js",[],"/Users/seansugrue/QuestBorard/qbclient/src/actions/posts.js",[],"/Users/seansugrue/QuestBorard/qbclient/src/components/Form/Form.js",["76","77","78","79","80"],"import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({ currentId, setCurrentId }) => {\n    const [postData, setPostData] = useState({creator: '', title: '', message: '', tags: '', selectedFile: ''});\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(post) setPostData(post);\n    }, [post])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(currentId) {\n            dispatch(updatePost(currentId, postData));\n        } else {\n            dispatch(createPost(postData));\n        }\n        clear();\n    }\n\n    const clear = () => { \n        setCurrentId(null);\n        setPostData({creator: '', title: '', message: '', tags: '', selectedFile: ''});\n    }\n\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n            <Typography variant=\"h6\">{ currentId ? 'Edit' : 'Post' } a Quest</Typography>\n            <TextField name=\"creator\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ... postData, creator: e.target.value})}/>\n            <TextField name=\"title\" variant=\"outlined\" label=\"Poster\" fullWidth value={postData.title} onChange={(e) => setPostData({ ... postData, title: e.target.value})}/>\n            <TextField name=\"message\" variant=\"outlined\" label=\"Description\" fullWidth value={postData.message} onChange={(e) => setPostData({ ... postData, message: e.target.value})}/>\n            <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (seperate with ,)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ... postData, tags: e.target.value.split(',')})}/>\n            <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({base64}) => setPostData({ ... postData, selectedFile: base64 })}/></div>\n            <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n            <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n            </form>\n        </Paper>\n    );\n}\n\nexport default Form;","/Users/seansugrue/QuestBorard/qbclient/src/components/Posts/Posts.js",[],"/Users/seansugrue/QuestBorard/qbclient/src/reducers/posts.js",["81","82"],"import {FETCH_ALL, CREATE, UPDATE, DELETE} from '../constants/actionTypes'\n\nexport default (posts = [], action) => {\n    switch (action.type) {\n\n        case DELETE:\n            return posts.filter((post) => post._id !== action.payload);\n        case UPDATE:\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post);\n        case FETCH_ALL:\n            return action.payload;\n        case CREATE:\n            return [ ... posts, action.payload];\n        default:\n            return posts;\n    }\n}","/Users/seansugrue/QuestBorard/qbclient/src/components/Form/styles.js",[],"/Users/seansugrue/QuestBorard/qbclient/src/api/index.js",[],"/Users/seansugrue/QuestBorard/qbclient/src/constants/actionTypes.js",[],"/Users/seansugrue/QuestBorard/qbclient/src/components/Posts/styles.js",[],"/Users/seansugrue/QuestBorard/qbclient/src/components/Posts/Post/Post.js",[],"/Users/seansugrue/QuestBorard/qbclient/src/components/Posts/Post/styles.js",[],"/Users/seansugrue/QuestBorard/qbclient/src/ComponentsChat/Store.js",[],"/Users/seansugrue/QuestBorard/qbclient/src/ComponentsChat/Dashboard.js",["83"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { CTX } from \"./Store\";\nimport { grey } from \"@material-ui/core/colors\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n      },\n    spacing: (2),\n    margin: '5px',\n    padding: theme.spacing(2),\n  },\n    media: {\n        height: \"flex\",\n        paddingTop: '56.25%',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        backgroundBlendMode: 'darken',\n      },\n      border: {\n        border: 'solid',\n      },\n      fullHeightCard: {\n        height: '100%',\n      },\n      card: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        borderRadius: '15px',\n        height: '100%',\n        position: 'relative',\n      },\n      overlay: {\n        position: 'absolute',\n        top: '20px',\n        left: '20px',\n        color: 'white',\n      },\n      overlay2: {\n        position: 'absolute',\n        top: '20px',\n        right: '20px',\n        color: 'white',\n      },\n      grid: {\n        display: 'flex',\n      },\n      details: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        margin: '20px',\n      },\n      title: {\n        padding: '0 16px',\n      },\n      cardActions: {\n        padding: '0 16px 8px 16px',\n        display: 'flex',\n        justifyContent: 'space-between',\n      \n  },\n  grow: {\n    flexGrow: \"1\",\n  },\n  textCenter: {\n    textAlign: \"center\",\n  },\n  chatHeader: {\n    flexGrow: \"1\",\n\n    margin: '5px',\n    padding: theme.spacing(2),\n    backgroundColor: \"darkgrey\",\n    color: \"#FFF\",\n    textAlign: \"center\",\n  },\n  topicsWindow: {\n    width: \"15%\",\n    margin: '5px',\n    padding: theme.spacing(2),\n    backgroundColor: \"darkgrey\",\n    height: \"calc(100vh - 122px)\",\n    maxHeight: \"100%\",\n    color: \"#FFF\",\n    display: \"inline-flex\",\n    float: \"left\",\n    flexDirection: \"column\",\n  },\n  chatWindow: {\n    height: \"calc(100vh - 222px)\",\n    borderRadius: 0,\n    overflowY: \"auto\",\n  },\n  chatWindowContent: {\n    backgroundColor: \"lightgrey\",\n    margin: '5px',\n    padding: theme.spacing(2),\n  },\n  footer: {\n    padding: \"1.5rem\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  flex: {\n    display: \"flex\",\n  },\n  alignCenter: {\n    alignItems: \"center\",\n  },\n  spacing: {\n    marginRight: \"20px\",\n  },\n  topicSelector: {\n      alignItems: \"left\",\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const { allChats, sendChatMsg, user } = React.useContext(CTX);\n  const topics = Object.keys(allChats);\n\n  const [value, setValue] = useState(\"\");\n\n  const [activeTopic, setActiveTopic] = useState(topics[0]);\n  return (\n    <Card className={classes.card}>\n      <div className={classes.root}>\n        <div className={classes.chatHeader}>\n          <h1>QuestBOARD CHAT</h1>\n          <h3>{activeTopic}</h3>\n        </div>\n      </div>\n      <div className={classes.topicsWindow}>\n        {topics.map((topic, idx) => {\n          return (\n            <List component=\"nav\" key={idx}>\n              <ListItem className={classes.topicSelector}\n                button\n                onClick={(e) => setActiveTopic(e.target.innerText)}\n              >\n                <ListItemIcon>{/* <InboxIcon /> */}</ListItemIcon>\n                <ListItemText primary={topic} />\n              </ListItem>\n            </List>\n          );\n        })}\n      </div>\n      <span></span>\n      <div className={classes.chatWindowContainer}>\n        <Card className={classes.chatWindow} variant=\"outlined\">\n          {allChats[activeTopic].map((msg, idx) => {\n            return (\n              <CardContent\n                key={idx}\n                className={`${classes.flex} ${classes.chatWindowContent} ${classes.alignCenter}`}\n              >\n                <Avatar\n                  alt={msg.from}\n                  src=\"dummy.jpg\"\n                  className={classes.spacing}\n                />\n                <Typography>{msg.msg}</Typography>\n              </CardContent>\n            );\n          })}\n        </Card>\n        <Card className={classes.footer}>\n          <TextField\n            className={classes.grow}\n            id=\"standard-basic\"\n            label=\"Type here ...\"\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n          />\n          <Button\n            onClick={() => {\n              sendChatMsg({ from: user, msg: value, topic: activeTopic });\n              setValue(\"\");\n            }}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Send\n          </Button>\n        </Card>\n      </div>\n    </Card>\n  );\n}","/Users/seansugrue/QuestBorard/qbclient/src/serviceWorker.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":39,"column":141,"nodeType":"90","messageId":"91","endLine":39,"endColumn":142,"fix":"92"},{"ruleId":"88","severity":1,"message":"89","line":40,"column":138,"nodeType":"90","messageId":"91","endLine":40,"endColumn":139,"fix":"93"},{"ruleId":"88","severity":1,"message":"89","line":41,"column":147,"nodeType":"90","messageId":"91","endLine":41,"endColumn":148,"fix":"94"},{"ruleId":"88","severity":1,"message":"89","line":42,"column":152,"nodeType":"90","messageId":"91","endLine":42,"endColumn":153,"fix":"95"},{"ruleId":"88","severity":1,"message":"89","line":43,"column":126,"nodeType":"90","messageId":"91","endLine":43,"endColumn":127,"fix":"96"},{"ruleId":"97","severity":1,"message":"98","line":3,"column":1,"nodeType":"99","endLine":17,"endColumn":2},{"ruleId":"88","severity":1,"message":"100","line":13,"column":25,"nodeType":"101","messageId":"91","endLine":13,"endColumn":26,"fix":"102"},{"ruleId":"103","severity":1,"message":"104","line":14,"column":10,"nodeType":"105","messageId":"106","endLine":14,"endColumn":14},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"109","text":"110"},{"range":"111","text":"110"},{"range":"112","text":"110"},{"range":"113","text":"110"},{"range":"114","text":"110"},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected whitespace after spread operator.","SpreadElement",{"range":"115","text":"110"},"no-unused-vars","'grey' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",[1524,1525],"",[1701,1702],[1885,1886],[2076,2077],[2249,2250],[460,461]]