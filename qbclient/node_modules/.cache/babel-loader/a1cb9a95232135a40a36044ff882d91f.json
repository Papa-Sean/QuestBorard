{"ast":null,"code":"var _jsxFileName = \"/Users/seansugrue/QuestBorard/qbclient/src/ComponentsChat/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { CTX } from \"./Store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    spacing: 2,\n    margin: '5px',\n    padding: theme.spacing(2)\n  },\n  chatWidget: {\n    media: {\n      height: 0,\n      paddingTop: '56.25%',\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      backgroundBlendMode: 'darken'\n    },\n    border: {\n      border: 'solid'\n    },\n    fullHeightCard: {\n      height: '100%'\n    },\n    card: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      borderRadius: '15px',\n      height: '100%',\n      position: 'relative'\n    },\n    overlay: {\n      position: 'absolute',\n      top: '20px',\n      left: '20px',\n      color: 'white'\n    },\n    overlay2: {\n      position: 'absolute',\n      top: '20px',\n      right: '20px',\n      color: 'white'\n    },\n    grid: {\n      display: 'flex'\n    },\n    details: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      margin: '20px'\n    },\n    title: {\n      padding: '0 16px'\n    },\n    cardActions: {\n      padding: '0 16px 8px 16px',\n      display: 'flex',\n      justifyContent: 'space-between'\n    }\n  },\n  grow: {\n    flexGrow: \"1\"\n  },\n  textCenter: {\n    textAlign: \"center\"\n  },\n  chatHeader: {\n    flexGrow: \"1\",\n    margin: '5px',\n    padding: theme.spacing(2),\n    backgroundColor: \"darkgrey\",\n    color: \"#FFF\",\n    textAlign: \"center\"\n  },\n  topicsWindow: {\n    width: \"15%\",\n    margin: '5px',\n    padding: theme.spacing(2),\n    backgroundColor: \"darkgrey\",\n    height: \"calc(100vh - 122px)\",\n    maxHeight: \"100%\",\n    color: \"#FFF\",\n    display: \"inline-flex\",\n    float: \"left\",\n    flexDirection: \"column\"\n  },\n  chatWindow: {\n    height: \"calc(100vh - 222px)\",\n    borderRadius: 0,\n    overflowY: \"auto\"\n  },\n  chatWindowContent: {\n    backgroundColor: \"lightgrey\",\n    margin: '5px',\n    padding: theme.spacing(2)\n  },\n  footer: {\n    padding: \"1.5rem\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  flex: {\n    display: \"flex\"\n  },\n  alignCenter: {\n    alignItems: \"center\"\n  },\n  spacing: {\n    marginRight: \"20px\"\n  },\n  topicSelector: {\n    alignItems: \"left\"\n  }\n}));\nexport default function Dashboard() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    allChats,\n    sendChatMsg,\n    user\n  } = React.useContext(CTX);\n  const topics = Object.keys(allChats);\n  const [value, setValue] = useState(\"\");\n  const [activeTopic, setActiveTopic] = useState(topics[0]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.chatWidget,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.chatHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"REACT CHAT APPLICATION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: activeTopic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.topicsWindow,\n      children: topics.map((topic, idx) => {\n        return /*#__PURE__*/_jsxDEV(List, {\n          component: \"nav\",\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            className: classes.topicSelector,\n            button: true,\n            onClick: e => setActiveTopic(e.target.innerText),\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: topic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.chatWindowContainer,\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: classes.chatWindow,\n        variant: \"outlined\",\n        children: allChats[activeTopic].map((msg, idx) => {\n          return /*#__PURE__*/_jsxDEV(CardContent, {\n            className: `${classes.flex} ${classes.chatWindowContent} ${classes.alignCenter}`,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              alt: msg.from,\n              src: \"dummy.jpg\",\n              className: classes.spacing\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: msg.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.footer,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.grow,\n          id: \"standard-basic\",\n          label: \"Type here ...\",\n          value: value,\n          onChange: e => setValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            sendChatMsg({\n              from: user,\n              msg: value,\n              topic: activeTopic\n            });\n            setValue(\"\");\n          },\n          variant: \"contained\",\n          color: \"grey\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"+/g5UdE35pkTgSR/wM6JK3O2rQM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/seansugrue/QuestBorard/qbclient/src/ComponentsChat/Dashboard.js"],"names":["React","useState","makeStyles","List","ListItem","ListItemIcon","ListItemText","Card","CardContent","Typography","Avatar","Button","TextField","CTX","useStyles","theme","root","spacing","margin","padding","chatWidget","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","title","cardActions","grow","flexGrow","textCenter","textAlign","chatHeader","topicsWindow","width","maxHeight","float","chatWindow","overflowY","chatWindowContent","footer","flex","alignCenter","alignItems","marginRight","topicSelector","Dashboard","classes","allChats","sendChatMsg","user","useContext","topics","Object","keys","value","setValue","activeTopic","setActiveTopic","map","topic","idx","e","target","innerText","chatWindowContainer","msg","from"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { CTX } from \"./Store\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    spacing: (2),\n    margin: '5px',\n    padding: theme.spacing(2),\n  },\n  chatWidget: {\n    media: {\n        height: 0,\n        paddingTop: '56.25%',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        backgroundBlendMode: 'darken',\n      },\n      border: {\n        border: 'solid',\n      },\n      fullHeightCard: {\n        height: '100%',\n      },\n      card: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        borderRadius: '15px',\n        height: '100%',\n        position: 'relative',\n      },\n      overlay: {\n        position: 'absolute',\n        top: '20px',\n        left: '20px',\n        color: 'white',\n      },\n      overlay2: {\n        position: 'absolute',\n        top: '20px',\n        right: '20px',\n        color: 'white',\n      },\n      grid: {\n        display: 'flex',\n      },\n      details: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        margin: '20px',\n      },\n      title: {\n        padding: '0 16px',\n      },\n      cardActions: {\n        padding: '0 16px 8px 16px',\n        display: 'flex',\n        justifyContent: 'space-between',\n      },\n  },\n  grow: {\n    flexGrow: \"1\",\n  },\n  textCenter: {\n    textAlign: \"center\",\n  },\n  chatHeader: {\n    flexGrow: \"1\",\n\n    margin: '5px',\n    padding: theme.spacing(2),\n    backgroundColor: \"darkgrey\",\n    color: \"#FFF\",\n    textAlign: \"center\",\n  },\n  topicsWindow: {\n    width: \"15%\",\n    margin: '5px',\n    padding: theme.spacing(2),\n    backgroundColor: \"darkgrey\",\n    height: \"calc(100vh - 122px)\",\n    maxHeight: \"100%\",\n    color: \"#FFF\",\n    display: \"inline-flex\",\n    float: \"left\",\n    flexDirection: \"column\",\n  },\n  chatWindow: {\n    height: \"calc(100vh - 222px)\",\n    borderRadius: 0,\n    overflowY: \"auto\",\n  },\n  chatWindowContent: {\n    backgroundColor: \"lightgrey\",\n    margin: '5px',\n    padding: theme.spacing(2),\n  },\n  footer: {\n    padding: \"1.5rem\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  flex: {\n    display: \"flex\",\n  },\n  alignCenter: {\n    alignItems: \"center\",\n  },\n  spacing: {\n    marginRight: \"20px\",\n  },\n  topicSelector: {\n      alignItems: \"left\",\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const { allChats, sendChatMsg, user } = React.useContext(CTX);\n  const topics = Object.keys(allChats);\n\n  const [value, setValue] = useState(\"\");\n\n  const [activeTopic, setActiveTopic] = useState(topics[0]);\n  return (\n    <Card className={classes.chatWidget}>\n      <div className={classes.root}>\n        <div className={classes.chatHeader}>\n          <h1>REACT CHAT APPLICATION</h1>\n          <h3>{activeTopic}</h3>\n        </div>\n      </div>\n      <div className={classes.topicsWindow}>\n        {topics.map((topic, idx) => {\n          return (\n            <List component=\"nav\" key={idx}>\n              <ListItem className={classes.topicSelector}\n                button\n                onClick={(e) => setActiveTopic(e.target.innerText)}\n              >\n                <ListItemIcon>{/* <InboxIcon /> */}</ListItemIcon>\n                <ListItemText primary={topic} />\n              </ListItem>\n            </List>\n          );\n        })}\n      </div>\n      <div className={classes.chatWindowContainer}>\n        <Card className={classes.chatWindow} variant=\"outlined\">\n          {allChats[activeTopic].map((msg, idx) => {\n            return (\n              <CardContent\n                key={idx}\n                className={`${classes.flex} ${classes.chatWindowContent} ${classes.alignCenter}`}\n              >\n                <Avatar\n                  alt={msg.from}\n                  src=\"dummy.jpg\"\n                  className={classes.spacing}\n                />\n                <Typography>{msg.msg}</Typography>\n              </CardContent>\n            );\n          })}\n        </Card>\n        <Card className={classes.footer}>\n          <TextField\n            className={classes.grow}\n            id=\"standard-basic\"\n            label=\"Type here ...\"\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n          />\n          <Button\n            onClick={() => {\n              sendChatMsg({ from: user, msg: value, topic: activeTopic });\n              setValue(\"\");\n            }}\n            variant=\"contained\"\n            color=\"grey\"\n          >\n            Send\n          </Button>\n        </Card>\n      </div>\n    </Card>\n  );\n}"]},"metadata":{},"sourceType":"module"}